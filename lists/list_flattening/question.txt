Start with a standard doubly linked list. Now imagine that in addition to the next and previous pointers, each element has a child pointer, which may or may not point to a separate doubly linked list. These child lists may have one or more children of their own, and so on, to produce a multilevel data structure.

Flatten the list so that all the nodes appear in a single-level, doubly linked list. You are given the head and tail of the first level of the list. Each node is a C struct with the following definition:
typedef struct Node 
{    
	struct Node *next;
	struct Node *prev;
	struct Node *child;
	int          value;
} Node;


Editor's note: this question was taken from "Programming Interviews Exposed"
