My approach will be to create two 'pointers' to the linked list, the second trailing the first by m items.  Once the first hits the end of the list, the second pointer should be pointing at the Mth-to-last item.  This is efficient because it avoids multiple traversals (the level 0 solution would just be to traverse the list to the end  to determine the size and then traverse it to m-less-the-size a second time) and because it avoids storing a large amount of data in memory (another level 0 solution would be to just store all previous elements and then calculate the mth-to-last item once you hit the end of the list).
